class taint {

    [lisa.taint.Tainted]
	source(){
		return -99;
	}

    [lisa.taint.Clean]
	sanitizer(v){
		return 0;
	}

	sink([lisa.taint.Sink] v){
	    // do nothing
	}

	notVulnerable() {
		def c = 0;
		this.sink(c);  // the value is clean
	}

	directFlow() {
		def t = this.source();
		this.sink(t); // a tainted value flows in a sink!
	}

	sanitizedValue() {
		def t = this.source();
		def s = this.sanitizer(t);
		this.sink(s);  // the value is clean due to sanitization
	}

	branch(b) {
		def m = 0;
		if(b) {
			m = this.source();
		} else {
		  m = 5;
		}
		this.sink(m); // the value may be tainted
	}
}